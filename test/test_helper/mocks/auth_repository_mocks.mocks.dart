// Mocks generated by Mockito 5.4.4 from annotations
// in adaptive_demo/test/test_helper/mocks/auth_repository_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:adaptive_demo/features/auth/domain/repositories/auth_repository_interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryInterface extends _i1.Mock
    implements _i2.AuthRepositoryInterface {
  MockAuthRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> signup(
    String? mobileNumber,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            mobileNumber,
            password,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> verifyOTP(
    String? mobileNumber,
    String? otp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [
            mobileNumber,
            otp,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String> login(
    String? mobileNumber,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            mobileNumber,
            password,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #login,
            [
              mobileNumber,
              password,
            ],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<bool> forgotPassword(String? mobileNumber) => (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [mobileNumber],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
